
#user html;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


rtmp {
    	server {

        	listen 1935;
	        chunk_size 4000;

		application app {
			live on;
			deny play all;

			push rtmp://127.0.0.1:1935/hls;

		        on_publish http://127.0.0.1/api/on_publish/;
			on_publish_done http://127.0.0.1/api/on_publish_done/;
		}


        	application hls {
			live on;
		  	deny play all;
		    	
            		allow publish 127.0.0.1;
			deny publish all;
	            	
			hls on;
        	    	hls_path /usr/share/nginx/html/live;

			hls_nested on;
            		hls_fragment_naming system;
	        }
	}
}



http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    
    server {

        listen      8083;
        proxy_read_timeout 300s;
	add_header Access-Control-Allow-Origin "*";

	location ~ ^/live/(.+\.ts)$ {
        	alias /usr/share/nginx/html/live/$1;

	        # Let the MPEG-TS video chunks be cacheable
        	expires max;
    	}

    	location ~ ^/live/(.+\.m3u8)$ {
        	alias /usr/share/nginx/html/live/$1;

	        # The M3U8 playlists should not be cacheable
        	expires -1d;
    	}
    }

    client_max_body_size 2G;
    upstream django {
    	server unix:///usr/share/nginx/html/api/django.sock; # for a file socket
    }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

	location /api {
		rewrite ^/api/(.*) /$1  break;
     		include     /opt/nginx/conf/uwsgi_params;
		uwsgi_pass  django;
		uwsgi_read_timeout 600;
	}

        error_page  404              /index.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
    

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
